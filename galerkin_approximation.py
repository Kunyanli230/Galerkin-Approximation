# -*- coding: utf-8 -*-
"""Galerkin Approximation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QVhUZd4yRBYfTBbDhdUfiRY6plIQX3Cj
"""

from fenics import *
import numpy as np
import matplotlib.pyplot as plt

mesh = UnitSquareMesh(32, 32)

V = VectorFunctionSpace(mesh, "P", 2)
Q = FunctionSpace(mesh, "P", 1)

u = TrialFunction(V)
v = TestFunction(V)
p = TrialFunction(Q)
q = TestFunction(Q)

nu = 0.01

W_noise = Expression(("0.1*sin(2*pi*x[0]) * cos(2*pi*x[1])",
                      "0.1*cos(2*pi*x[0]) * sin(2*pi*x[1])"), degree=2)

noslip = Constant((0, 0))
bc_u = DirichletBC(V, noslip, "on_boundary")

F = (nu * inner(grad(u), grad(v)) * dx
     - inner(p, div(v)) * dx
     - inner(div(u), q) * dx
     + inner(W_noise, v) * dx)

a, L = lhs(F), rhs(F)

u_sol = Function(V)
solve(a == L, u_sol, bc_u)

plt.figure(figsize=(6, 6))
plot(u_sol)
plt.title("Galerkin Approximation of 2D Stochastic Navier-Stokes")
plt.show()